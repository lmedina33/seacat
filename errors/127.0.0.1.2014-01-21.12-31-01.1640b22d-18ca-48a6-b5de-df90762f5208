(dp1
S'output'
p2
S"<class 'gluon.contrib.pg8000.errors.ProgrammingError'> ('ERROR', '23503', 'inserci\\xc3\\xb3n o actualizaci\\xc3\\xb3n en la tabla \\xc2\\xabauth_user\\xc2\\xbb viola la llave for\\xc3\\xa1nea \\xc2\\xabauth_user_created_by_fkey\\xc2\\xbb')"
p3
sS'layer'
p4
S'/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/controllers/appadmin.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\r\n\r\n# ##########################################################\r\n# ## make sure administrator is on localhost\r\n# ###########################################################\r\n\r\nimport os\r\nimport socket\r\nimport datetime\r\nimport copy\r\nimport gluon.contenttype\r\nimport gluon.fileutils\r\n\r\ntry:\r\n    import pygraphviz as pgv\r\nexcept ImportError:\r\n    pgv = None\r\n\r\nresponse.subtitle = T("Database Administration (appadmin)")\r\n\r\n# ## critical --- make a copy of the environment\r\n\r\nglobal_env = copy.copy(globals())\r\nglobal_env[\'datetime\'] = datetime\r\n\r\nhttp_host = request.env.http_host.split(\':\')[0]\r\nremote_addr = request.env.remote_addr\r\ntry:\r\n    hosts = (http_host, socket.gethostname(),\r\n             socket.gethostbyname(http_host),\r\n             \'::1\', \'127.0.0.1\', \'::ffff:127.0.0.1\')\r\nexcept:\r\n    hosts = (http_host, )\r\n\r\nif request.env.http_x_forwarded_for or request.is_https:\r\n    session.secure()\r\nelif (remote_addr not in hosts) and (remote_addr != "127.0.0.1"):\r\n    raise HTTP(200, T(\'appadmin is disabled because insecure channel\'))\r\n\r\nif request.function in (\'auth_manage\',\'manage\') and \'auth\' in globals():\r\n    auth.requires_membership(auth.settings.manager_group_role)(lambda: None)()\r\n    menu = False\r\nelif (request.application == \'admin\' and not session.authorized) or \\\r\n        (request.application != \'admin\' and not gluon.fileutils.check_credentials(request)):    \r\n    redirect(URL(\'admin\', \'default\', \'index\',\r\n                 vars=dict(send=URL(args=request.args, vars=request.vars))))\r\nelse:\r\n    menu = True\r\n\r\nignore_rw = True\r\nresponse.view = \'appadmin.html\'\r\nif menu:\r\n    response.menu = [[T(\'design\'), False, URL(\'admin\', \'default\', \'design\',\r\n                 args=[request.application])], [T(\'db\'), False,\r\n                 URL(\'index\')], [T(\'state\'), False,\r\n                 URL(\'state\')], [T(\'cache\'), False,\r\n                 URL(\'ccache\')]]\r\n    response.menu += [[T(\'Start\'), False, URL(\'default\', \'start\')]]\r\n\r\n# ##########################################################\r\n# ## auxiliary functions\r\n# ###########################################################\r\n\r\nif False and request.tickets_db:\r\n    from gluon.restricted import TicketStorage\r\n    ts = TicketStorage()\r\n    ts._get_table(request.tickets_db, ts.tablename, request.application)\r\n\r\ndef get_databases(request):\r\n    dbs = {}\r\n    for (key, value) in global_env.items():\r\n        cond = False\r\n        try:\r\n            cond = isinstance(value, GQLDB)\r\n        except:\r\n            cond = isinstance(value, SQLDB)\r\n        if cond:\r\n            dbs[key] = value\r\n    return dbs\r\n\r\n\r\ndatabases = get_databases(None)\r\n\r\n\r\ndef eval_in_global_env(text):\r\n    exec (\'_ret=%s\' % text, {}, global_env)\r\n    return global_env[\'_ret\']\r\n\r\n\r\ndef get_database(request):\r\n    if request.args and request.args[0] in databases:\r\n        return eval_in_global_env(request.args[0])\r\n    else:\r\n        session.flash = T(\'invalid request\')\r\n        redirect(URL(\'index\'))\r\n\r\n\r\ndef get_table(request):\r\n    db = get_database(request)\r\n    if len(request.args) > 1 and request.args[1] in db.tables:\r\n        return (db, request.args[1])\r\n    else:\r\n        session.flash = T(\'invalid request\')\r\n        redirect(URL(\'index\'))\r\n\r\n\r\ndef get_query(request):\r\n    try:\r\n        return eval_in_global_env(request.vars.query)\r\n    except Exception:\r\n        return None\r\n\r\n\r\ndef query_by_table_type(tablename, db, request=request):\r\n    keyed = hasattr(db[tablename], \'_primarykey\')\r\n    if keyed:\r\n        firstkey = db[tablename][db[tablename]._primarykey[0]]\r\n        cond = \'>0\'\r\n        if firstkey.type in [\'string\', \'text\']:\r\n            cond = \'!=""\'\r\n        qry = \'%s.%s.%s%s\' % (\r\n            request.args[0], request.args[1], firstkey.name, cond)\r\n    else:\r\n        qry = \'%s.%s.id>0\' % tuple(request.args[:2])\r\n    return qry\r\n\r\n\r\n# ##########################################################\r\n# ## list all databases and tables\r\n# ###########################################################\r\n#@auth.requires_membership(\'root\')\r\ndef index():\r\n    return dict(databases=databases)\r\n\r\n\r\n# ##########################################################\r\n# ## insert a new record\r\n# ###########################################################\r\n\r\n\r\ndef insert():\r\n    (db, table) = get_table(request)\r\n    form = SQLFORM(db[table], ignore_rw=ignore_rw)\r\n    if form.accepts(request.vars, session):\r\n        response.flash = T(\'new record inserted\')\r\n    return dict(form=form, table=db[table])\r\n\r\n\r\n# ##########################################################\r\n# ## list all records in table and insert new record\r\n# ###########################################################\r\n\r\n\r\ndef download():\r\n    import os\r\n    db = get_database(request)\r\n    return response.download(request, db)\r\n\r\n\r\ndef csv():\r\n    import gluon.contenttype\r\n    response.headers[\'Content-Type\'] = \\\r\n        gluon.contenttype.contenttype(\'.csv\')\r\n    db = get_database(request)\r\n    query = get_query(request)\r\n    if not query:\r\n        return None\r\n    response.headers[\'Content-disposition\'] = \'attachment; filename=%s_%s.csv\'\\\r\n        % tuple(request.vars.query.split(\'.\')[:2])\r\n    return str(db(query, ignore_common_filters=True).select())\r\n\r\n\r\ndef import_csv(table, file):\r\n    table.import_from_csv_file(file)\r\n\r\n\r\ndef select():\r\n    import re\r\n    db = get_database(request)\r\n    dbname = request.args[0]\r\n    regex = re.compile(\'(?P<table>\\w+)\\.(?P<field>\\w+)=(?P<value>\\d+)\')\r\n    if len(request.args) > 1 and hasattr(db[request.args[1]], \'_primarykey\'):\r\n        regex = re.compile(\'(?P<table>\\w+)\\.(?P<field>\\w+)=(?P<value>.+)\')\r\n    if request.vars.query:\r\n        match = regex.match(request.vars.query)\r\n        if match:\r\n            request.vars.query = \'%s.%s.%s==%s\' % (request.args[0],\r\n                                                   match.group(\'table\'), match.group(\'field\'),\r\n                                                   match.group(\'value\'))\r\n    else:\r\n        request.vars.query = session.last_query\r\n    query = get_query(request)\r\n    if request.vars.start:\r\n        start = int(request.vars.start)\r\n    else:\r\n        start = 0\r\n    nrows = 0\r\n    stop = start + 100\r\n    table = None\r\n    rows = []\r\n    orderby = request.vars.orderby\r\n    if orderby:\r\n        orderby = dbname + \'.\' + orderby\r\n        if orderby == session.last_orderby:\r\n            if orderby[0] == \'~\':\r\n                orderby = orderby[1:]\r\n            else:\r\n                orderby = \'~\' + orderby\r\n    session.last_orderby = orderby\r\n    session.last_query = request.vars.query\r\n    form = FORM(TABLE(TR(T(\'Query:\'), \'\', INPUT(_style=\'width:400px\',\r\n                _name=\'query\', _value=request.vars.query or \'\',\r\n                requires=IS_NOT_EMPTY(\r\n                    error_message=T("Cannot be empty")))), TR(T(\'Update:\'),\r\n                INPUT(_name=\'update_check\', _type=\'checkbox\',\r\n                value=False), INPUT(_style=\'width:400px\',\r\n                _name=\'update_fields\', _value=request.vars.update_fields\r\n                                    or \'\')), TR(T(\'Delete:\'), INPUT(_name=\'delete_check\',\r\n                _class=\'delete\', _type=\'checkbox\', value=False), \'\'),\r\n                TR(\'\', \'\', INPUT(_type=\'submit\', _value=T(\'submit\')))),\r\n                _action=URL(r=request, args=request.args))\r\n\r\n    tb = None\r\n    if form.accepts(request.vars, formname=None):\r\n        regex = re.compile(request.args[0] + \'\\.(?P<table>\\w+)\\..+\')\r\n        match = regex.match(form.vars.query.strip())\r\n        if match:\r\n            table = match.group(\'table\')\r\n        try:\r\n            nrows = db(query).count()\r\n            if form.vars.update_check and form.vars.update_fields:\r\n                db(query).update(**eval_in_global_env(\'dict(%s)\'\r\n                                                      % form.vars.update_fields))\r\n                response.flash = T(\'%s %%{row} updated\', nrows)\r\n            elif form.vars.delete_check:\r\n                db(query).delete()\r\n                response.flash = T(\'%s %%{row} deleted\', nrows)\r\n            nrows = db(query).count()\r\n            if orderby:\r\n                rows = db(query, ignore_common_filters=True).select(limitby=(\r\n                    start, stop), orderby=eval_in_global_env(orderby))\r\n            else:\r\n                rows = db(query, ignore_common_filters=True).select(\r\n                    limitby=(start, stop))\r\n        except Exception, e:\r\n            import traceback\r\n            tb = traceback.format_exc()\r\n            (rows, nrows) = ([], 0)\r\n            response.flash = DIV(T(\'Invalid Query\'), PRE(str(e)))\r\n    # begin handle upload csv\r\n    csv_table = table or request.vars.table\r\n    if csv_table:\r\n        formcsv = FORM(str(T(\'or import from csv file\')) + " ",\r\n                       INPUT(_type=\'file\', _name=\'csvfile\'),\r\n                       INPUT(_type=\'hidden\', _value=csv_table, _name=\'table\'),\r\n                       INPUT(_type=\'submit\', _value=T(\'import\')))\r\n    else:\r\n        formcsv = None\r\n    if formcsv and formcsv.process().accepted:\r\n        try:\r\n            import_csv(db[request.vars.table],\r\n                       request.vars.csvfile.file)\r\n            response.flash = T(\'data uploaded\')\r\n        except Exception, e:\r\n            response.flash = DIV(T(\'unable to parse csv file\'), PRE(str(e)))\r\n    # end handle upload csv\r\n\r\n    return dict(\r\n        form=form,\r\n        table=table,\r\n        start=start,\r\n        stop=stop,\r\n        nrows=nrows,\r\n        rows=rows,\r\n        query=request.vars.query,\r\n        formcsv=formcsv,\r\n        tb=tb,\r\n    )\r\n\r\n\r\n# ##########################################################\r\n# ## edit delete one record\r\n# ###########################################################\r\n\r\n\r\ndef update():\r\n    (db, table) = get_table(request)\r\n    keyed = hasattr(db[table], \'_primarykey\')\r\n    record = None\r\n    db[table]._common_filter = None\r\n    if keyed:\r\n        key = [f for f in request.vars if f in db[table]._primarykey]\r\n        if key:\r\n            record = db(db[table][key[0]] == request.vars[key[\r\n                        0]]).select().first()\r\n    else:\r\n        record = db(db[table].id == request.args(\r\n            2)).select().first()\r\n\r\n    if not record:\r\n        qry = query_by_table_type(table, db)\r\n        session.flash = T(\'record does not exist\')\r\n        redirect(URL(\'select\', args=request.args[:1],\r\n                     vars=dict(query=qry)))\r\n\r\n    if keyed:\r\n        for k in db[table]._primarykey:\r\n            db[table][k].writable = False\r\n\r\n    form = SQLFORM(\r\n        db[table], record, deletable=True, delete_label=T(\'Check to delete\'),\r\n        ignore_rw=ignore_rw and not keyed,\r\n        linkto=URL(\'select\',\r\n                   args=request.args[:1]), upload=URL(r=request,\r\n                                                      f=\'download\', args=request.args[:1]))\r\n\r\n    if form.accepts(request.vars, session):\r\n        session.flash = T(\'done!\')\r\n        qry = query_by_table_type(table, db)\r\n        redirect(URL(\'select\', args=request.args[:1],\r\n                 vars=dict(query=qry)))\r\n    return dict(form=form, table=db[table])\r\n\r\n\r\n# ##########################################################\r\n# ## get global variables\r\n# ###########################################################\r\n\r\n\r\ndef state():\r\n    return dict()\r\n\r\n\r\ndef ccache():\r\n    cache.ram.initialize()\r\n    cache.disk.initialize()\r\n\r\n    form = FORM(\r\n        P(TAG.BUTTON(\r\n            T("Clear CACHE?"), _type="submit", _name="yes", _value="yes")),\r\n        P(TAG.BUTTON(\r\n            T("Clear RAM"), _type="submit", _name="ram", _value="ram")),\r\n        P(TAG.BUTTON(\r\n            T("Clear DISK"), _type="submit", _name="disk", _value="disk")),\r\n    )\r\n\r\n    if form.accepts(request.vars, session):\r\n        clear_ram = False\r\n        clear_disk = False\r\n        session.flash = ""\r\n        if request.vars.yes:\r\n            clear_ram = clear_disk = True\r\n        if request.vars.ram:\r\n            clear_ram = True\r\n        if request.vars.disk:\r\n            clear_disk = True\r\n\r\n        if clear_ram:\r\n            cache.ram.clear()\r\n            session.flash += T("Ram Cleared")\r\n        if clear_disk:\r\n            cache.disk.clear()\r\n            session.flash += T("Disk Cleared")\r\n\r\n        redirect(URL(r=request))\r\n\r\n    try:\r\n        from guppy import hpy\r\n        hp = hpy()\r\n    except ImportError:\r\n        hp = False\r\n\r\n    import shelve\r\n    import os\r\n    import copy\r\n    import time\r\n    import math\r\n    from gluon import portalocker\r\n\r\n    ram = {\r\n        \'entries\': 0,\r\n        \'bytes\': 0,\r\n        \'objects\': 0,\r\n        \'hits\': 0,\r\n        \'misses\': 0,\r\n        \'ratio\': 0,\r\n        \'oldest\': time.time(),\r\n        \'keys\': []\r\n    }\r\n    disk = copy.copy(ram)\r\n    total = copy.copy(ram)\r\n    disk[\'keys\'] = []\r\n    total[\'keys\'] = []\r\n\r\n    def GetInHMS(seconds):\r\n        hours = math.floor(seconds / 3600)\r\n        seconds -= hours * 3600\r\n        minutes = math.floor(seconds / 60)\r\n        seconds -= minutes * 60\r\n        seconds = math.floor(seconds)\r\n\r\n        return (hours, minutes, seconds)\r\n\r\n    for key, value in cache.ram.storage.iteritems():\r\n        if isinstance(value, dict):\r\n            ram[\'hits\'] = value[\'hit_total\'] - value[\'misses\']\r\n            ram[\'misses\'] = value[\'misses\']\r\n            try:\r\n                ram[\'ratio\'] = ram[\'hits\'] * 100 / value[\'hit_total\']\r\n            except (KeyError, ZeroDivisionError):\r\n                ram[\'ratio\'] = 0\r\n        else:\r\n            if hp:\r\n                ram[\'bytes\'] += hp.iso(value[1]).size\r\n                ram[\'objects\'] += hp.iso(value[1]).count\r\n            ram[\'entries\'] += 1\r\n            if value[0] < ram[\'oldest\']:\r\n                ram[\'oldest\'] = value[0]\r\n            ram[\'keys\'].append((key, GetInHMS(time.time() - value[0])))\r\n    folder = os.path.join(request.folder,\'cache\')\r\n    if not os.path.exists(folder):\r\n        os.mkdir(folder)\r\n    locker = open(os.path.join(folder, \'cache.lock\'), \'a\')\r\n    portalocker.lock(locker, portalocker.LOCK_EX)\r\n    disk_storage = shelve.open(\r\n        os.path.join(folder, \'cache.shelve\'))\r\n    try:\r\n        for key, value in disk_storage.items():\r\n            if isinstance(value, dict):\r\n                disk[\'hits\'] = value[\'hit_total\'] - value[\'misses\']\r\n                disk[\'misses\'] = value[\'misses\']\r\n                try:\r\n                    disk[\'ratio\'] = disk[\'hits\'] * 100 / value[\'hit_total\']\r\n                except (KeyError, ZeroDivisionError):\r\n                    disk[\'ratio\'] = 0\r\n            else:\r\n                if hp:\r\n                    disk[\'bytes\'] += hp.iso(value[1]).size\r\n                    disk[\'objects\'] += hp.iso(value[1]).count\r\n                disk[\'entries\'] += 1\r\n                if value[0] < disk[\'oldest\']:\r\n                    disk[\'oldest\'] = value[0]\r\n                disk[\'keys\'].append((key, GetInHMS(time.time() - value[0])))\r\n\r\n    finally:\r\n        portalocker.unlock(locker)\r\n        locker.close()\r\n        disk_storage.close()\r\n\r\n    total[\'entries\'] = ram[\'entries\'] + disk[\'entries\']\r\n    total[\'bytes\'] = ram[\'bytes\'] + disk[\'bytes\']\r\n    total[\'objects\'] = ram[\'objects\'] + disk[\'objects\']\r\n    total[\'hits\'] = ram[\'hits\'] + disk[\'hits\']\r\n    total[\'misses\'] = ram[\'misses\'] + disk[\'misses\']\r\n    total[\'keys\'] = ram[\'keys\'] + disk[\'keys\']\r\n    try:\r\n        total[\'ratio\'] = total[\'hits\'] * 100 / (total[\'hits\'] +\r\n                                                total[\'misses\'])\r\n    except (KeyError, ZeroDivisionError):\r\n        total[\'ratio\'] = 0\r\n\r\n    if disk[\'oldest\'] < ram[\'oldest\']:\r\n        total[\'oldest\'] = disk[\'oldest\']\r\n    else:\r\n        total[\'oldest\'] = ram[\'oldest\']\r\n\r\n    ram[\'oldest\'] = GetInHMS(time.time() - ram[\'oldest\'])\r\n    disk[\'oldest\'] = GetInHMS(time.time() - disk[\'oldest\'])\r\n    total[\'oldest\'] = GetInHMS(time.time() - total[\'oldest\'])\r\n\r\n    def key_table(keys):\r\n        return TABLE(\r\n            TR(TD(B(T(\'Key\'))), TD(B(T(\'Time in Cache (h:m:s)\')))),\r\n            *[TR(TD(k[0]), TD(\'%02d:%02d:%02d\' % k[1])) for k in keys],\r\n            **dict(_class=\'cache-keys\',\r\n                   _style="border-collapse: separate; border-spacing: .5em;"))\r\n\r\n    ram[\'keys\'] = key_table(ram[\'keys\'])\r\n    disk[\'keys\'] = key_table(disk[\'keys\'])\r\n    total[\'keys\'] = key_table(total[\'keys\'])\r\n\r\n    return dict(form=form, total=total,\r\n                ram=ram, disk=disk, object_stats=hp != False)\r\n\r\n\r\ndef table_template(table):\r\n    from gluon.html import TR, TD, TABLE, TAG\r\n\r\n    def FONT(*args, **kwargs):\r\n        return TAG.font(*args, **kwargs)\r\n\r\n    def types(field):\r\n        f_type = field.type\r\n        if not isinstance(f_type,str):\r\n            return \' \'\r\n        elif f_type == \'string\':\r\n            return field.length\r\n        elif f_type == \'id\':\r\n            return B(\'pk\')\r\n        elif f_type.startswith(\'reference\') or \\\r\n                f_type.startswith(\'list:reference\'):\r\n            return B(\'fk\')\r\n        else:\r\n            return \' \'\r\n\r\n    # This is horribe HTML but the only one graphiz understands\r\n    rows = []\r\n    cellpadding = 4\r\n    color = "#000000"\r\n    bgcolor = "#FFFFFF"\r\n    face = "Helvetica"\r\n    face_bold = "Helvetica Bold"\r\n    border = 0\r\n\r\n    rows.append(TR(TD(FONT(table, _face=face_bold, _color=bgcolor),\r\n                           _colspan=3, _cellpadding=cellpadding,\r\n                           _align="center", _bgcolor=color)))\r\n    for row in db[table]:\r\n        rows.append(TR(TD(FONT(row.name, _color=color, _face=face_bold),\r\n                              _align="left", _cellpadding=cellpadding,\r\n                              _border=border),\r\n                       TD(FONT(row.type, _color=color, _face=face),\r\n                               _align="left", _cellpadding=cellpadding,\r\n                               _border=border),\r\n                       TD(FONT(types(row), _color=color, _face=face),\r\n                               _align="center", _cellpadding=cellpadding,\r\n                               _border=border)))\r\n    return "< %s >" % TABLE(*rows, **dict(_bgcolor=bgcolor, _border=1,\r\n                                          _cellborder=0, _cellspacing=0)\r\n                             ).xml()\r\n\r\n\r\ndef bg_graph_model():\r\n    graph = pgv.AGraph(layout=\'dot\',  directed=True,  strict=False,  rankdir=\'LR\')\r\n    \r\n    subgraphs = dict()    \r\n    for tablename in db.tables:\r\n        if hasattr(db[tablename],\'_meta_graphmodel\'):\r\n            meta_graphmodel = db[tablename]._meta_graphmodel\r\n        else:\r\n            meta_graphmodel = dict(group=\'Undefined\', color=\'#ECECEC\')\r\n        \r\n        group = meta_graphmodel[\'group\'].replace(\' \', \'\') \r\n        if not subgraphs.has_key(group):\r\n            subgraphs[group] = dict(meta=meta_graphmodel, tables=[])\r\n            subgraphs[group][\'tables\'].append(tablename)\r\n        else:\r\n            subgraphs[group][\'tables\'].append(tablename)        \r\n      \r\n        graph.add_node(tablename, name=tablename, shape=\'plaintext\',\r\n                       label=table_template(tablename))\r\n    \r\n    for n, key in enumerate(subgraphs.iterkeys()):        \r\n        graph.subgraph(nbunch=subgraphs[key][\'tables\'],\r\n                    name=\'cluster%d\' % n,\r\n                    style=\'filled\',\r\n                    color=subgraphs[key][\'meta\'][\'color\'],\r\n                    label=subgraphs[key][\'meta\'][\'group\'])   \r\n\r\n    for tablename in db.tables:\r\n        for field in db[tablename]:\r\n            f_type = field.type\r\n            if isinstance(f_type,str) and (\r\n                f_type.startswith(\'reference\') or\r\n                f_type.startswith(\'list:reference\')):\r\n                referenced_table = f_type.split()[1].split(\'.\')[0]\r\n                n1 = graph.get_node(tablename)\r\n                n2 = graph.get_node(referenced_table)\r\n                graph.add_edge(n1, n2, color="#4C4C4C", label=\'\')\r\n\r\n    graph.layout()\r\n    #return graph.draw(format=\'png\', prog=\'dot\')\r\n    if not request.args:\r\n        return graph.draw(format=\'png\', prog=\'dot\')\r\n    else:       \r\n        response.headers[\'Content-Disposition\']=\'attachment;filename=graph.%s\'%request.args(0)\r\n        if request.args(0) == \'dot\':        \r\n            return graph.string()\r\n        else:\r\n            return graph.draw(format=request.args(0), prog=\'dot\')\r\n\r\ndef graph_model():    \r\n    return dict(databases=databases, pgv=pgv)\r\n\r\ndef auth_manage():\r\n    tablename = request.args(0)\r\n    if not tablename or not tablename in auth.db.tables:\r\n        return dict()\r\n    table = auth.db[tablename]\r\n    formname = \'%s_grid\' % tablename\r\n    if tablename == auth.settings.table_user_name:\r\n        auth.settings.table_user._plural = T(\'Users\')\r\n        auth.settings.table_membership._plural = T(\'Roles\')\r\n        auth.settings.table_membership._id.readable = False\r\n        auth.settings.table_membership.user_id.label = T(\'User\')\r\n        auth.settings.table_membership.group_id.label = T(\'Role\')\r\n        grid = SQLFORM.smartgrid(table, args=request.args[:1], user_signature=True,\r\n                                 linked_tables=[auth.settings.table_membership_name],\r\n                                 maxtextlength=1000, formname=formname)\r\n    else:\r\n        table._id.readable = False\r\n        auth.settings.table_permission.group_id.label = T(\'Role\')\r\n        auth.settings.table_permission.name.label = T(\'Permission\')\r\n        orderby = \'role\' if table == auth.settings.table_group_name else \'group_id\'\r\n        grid = SQLFORM.grid(table, args=request.args[:1], orderby=table[orderby],\r\n                            user_signature=True, maxtextlength=1000, formname=formname)    \r\n    return grid if request.extension==\'load\' else dict(grid=grid)\r\n\r\ndef manage():\r\n    tablename = request.args(0)\r\n    if tablename in auth.db.tables:\r\n        grid = SQLFORM.smartgrid(auth.db[tablename], args=request.args[:1])\r\n    else:\r\n        return dict()\r\n    return grid if request.extension==\'load\' else dict(grid=grid)\r\n\nresponse._vars=response._caller(insert)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'gluon.contrib.pg8000.errors'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of ProgrammingError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of ProgrammingError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of ProgrammingError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of ProgrammingError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of ProgrammingError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of ProgrammingError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of ProgrammingError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of ProgrammingError object>'
p35
sS'__class__'
p36
S"<class 'gluon.contrib.pg8000.errors.ProgrammingError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of ProgrammingError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of ProgrammingError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of ProgrammingError object>"
p45
sS'args'
p46
S"('ERROR', '23503', 'inserci\\xc3\\xb3n o actualizaci\\xc3\\xb3n en la tabla \\xc2\\xabauth_u...a la llave for\\xc3\\xa1nea \\xc2\\xabauth_user_created_by_fkey\\xc2\\xbb')"
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of ProgrammingError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of ProgrammingError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of ProgrammingError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of ProgrammingError object>"
p57
ssS'evalue'
p58
S"('ERROR', '23503', 'inserci\\xc3\\xb3n o actualizaci\\xc3\\xb3n en la tabla \\xc2\\xabauth_user\\xc2\\xbb viola la llave for\\xc3\\xa1nea \\xc2\\xabauth_user_created_by_fkey\\xc2\\xbb')"
p59
sS'request'
p60
cgluon.html
XML_unpickle
p61
(S's\x9cn\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>SEACAT_ingresos</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>db</div></td></tr><tr><td><div>auth_user</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>appadmin</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-890a02b4-d81a-452d-b5f4-fe4e888bcdeb<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_isbp</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-f7d6e8bc-faca-433a-87b3-3d7e74279bdd<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_pgday</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-4b839bf6-587f-4a54-9d21-64fdbe2253ae<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_seacat_ingresos</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a2589693-9f4a-40df-9f14-2fe733002bfd<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-e036a97f-f1cb-4429-807f-e6a9668cde90<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">CONTENT_LENGTH</td><td style="vertical-align:top;">:</td><td><div>1936</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">CONTENT_TYPE</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundary997LJu03RyAL78MB</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>es,es-419;q=0.8,en-US;q=0.6,en;q=0.4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONTENT_LENGTH</td><td style="vertical-align:top;">:</td><td><div>1936</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONTENT_TYPE</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundary997LJu03RyAL78MB</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_isbp=127.0.0.1-f7d6e8bc-faca-433a-87b3-3d7e74279bdd; __utma=96992031.17915714.1390050310.1390050310.1390057708.2; __utmc=96992031; __utmz=96992031.1390050310.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); session_id_pgday=127.0.0.1-4b839bf6-587f-4a54-9d21-64fdbe2253ae; session_id_welcome=127.0.0.1-e036a97f-f1cb-4429-807f-e6a9668cde90; session_id_admin=127.0.0.1-890a02b4-d81a-452d-b5f4-fe4e888bcdeb; session_id_seacat_ingresos=127.0.0.1-a2589693-9f4a-40df-9f14-2fe733002bfd</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ORIGIN</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/SEACAT_ingresos/appadmin/insert/db/auth_user</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/SEACAT_ingresos/appadmin/insert/db/auth_user</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>45293</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>larrea-lmde</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/&#x27;, &#x27;/home/leo/Dropbox/web2py/applications/admin/&#x27;, &#x27;/home/leo/Dropbox/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/leo/Dropbox/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x19e21b8: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;larrea-lmde&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/leo/Dropbox/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">content_length</td><td style="vertical-align:top;">:</td><td><div>1936</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">content_type</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundary997LJu03RyAL78MB</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/leo/Dropbox/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>es,es-419;q=0.8,en-US;q=0.6,en;q=0.4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_content_length</td><td style="vertical-align:top;">:</td><td><div>1936</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_content_type</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundary997LJu03RyAL78MB</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_isbp=127.0.0.1-f7d6e8bc-faca-433a-87b3-3d7e74279bdd; __utma=96992031.17915714.1390050310.1390050310.1390057708.2; __utmc=96992031; __utmz=96992031.1390050310.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); session_id_pgday=127.0.0.1-4b839bf6-587f-4a54-9d21-64fdbe2253ae; session_id_welcome=127.0.0.1-e036a97f-f1cb-4429-807f-e6a9668cde90; session_id_admin=127.0.0.1-890a02b4-d81a-452d-b5f4-fe4e888bcdeb; session_id_seacat_ingresos=127.0.0.1-a2589693-9f4a-40df-9f14-2fe733002bfd</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_origin</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/SEACAT_ingresos/appadmin/insert/db/auth_user</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>larrea-lmde</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/SEACAT_ingresos/appadmin/insert/db/auth_user</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>45293</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/SEACAT_ingresos/appadmin/insert/db/auth_user</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>larrea-lmde</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/leo/Dropbox/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.8.2-stable+timestamp.2013.11.28.13.54.07</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f9b5392e1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x19560b8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f9b3051ced0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f9b5392e1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x19560b8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f9b3051ced0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>insert</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/&#x27;, &#x27;/home/leo/Dropbox/web2py/applications/admin/&#x27;, &#x27;/home/leo/Dropbox/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/leo/Dropbox/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x19e21b8: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;larrea-lmde&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/leo/Dropbox/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/leo/Dropbox/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>larrea-lmde</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.8.2-stable+timestamp.2013.11.28.13.54.07</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 1, 21, 12, 31, 1, 992244)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div>db/auth_user</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/SEACAT_ingresos/appadmin/insert/db/auth_user</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 1, 21, 15, 31, 1, 992270)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>SEACAT_ingresos/127.0.0.1.2014-01-21.12-31-01.1640b22d-18ca-48a6-b5de-df90762f5208</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f9b202a9dd0&gt;</div></td></tr></table></div>'
tRp62
sS'frames'
p63
(lp64
(dp65
S'file'
p66
S'/home/leo/Dropbox/web2py/gluon/restricted.py'
p67
sS'dump'
p68
(dp69
S'environment'
p70
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}"
p71
sS'ccode'
p72
S'<code object <module> at 0x7f9b30569b30, file "/...SEACAT_ingresos/controllers/appadmin.py", line 7>'
p73
ssS'lnum'
p74
I217
sS'lines'
p75
(dp76
I212
S'    try:'
p77
sI213
S'        if isinstance(code, types.CodeType):'
p78
sI214
S'            ccode = code'
p79
sI215
S'        else:'
p80
sI216
S'            ccode = compile2(code, layer)'
p81
sI217
S'        exec ccode in environment'
p82
sI218
S'    except HTTP:'
p83
sI219
S'        raise'
p84
sI220
S'    except RestrictedError:'
p85
sI221
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p86
ssS'call'
p87
S"(code='# -*- coding: utf-8 -*-\\r\\n\\r\\n# ###################...=grid)\\r\\n\\nresponse._vars=response._caller(insert)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}, layer='/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/controllers/appadmin.py')"
p88
sS'func'
p89
S'restricted'
p90
sa(dp91
g66
S'/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/controllers/appadmin.py'
p92
sg68
(dp93
sg74
I617
sg75
(dp94
I608
S''
sI609
S'def manage():'
p95
sI610
S'    tablename = request.args(0)'
p96
sI611
S'    if tablename in auth.db.tables:'
p97
sI612
S'        grid = SQLFORM.smartgrid(auth.db[tablename], args=request.args[:1])'
p98
sI613
S'    else:'
p99
sI614
S'        return dict()'
p100
sI615
S"    return grid if request.extension=='load' else dict(grid=grid)"
p101
sI606
S'                            user_signature=True, maxtextlength=1000, formname=formname)'
p102
sI607
S"    return grid if request.extension=='load' else dict(grid=grid)"
p103
ssg87
S'()'
p104
sg89
S'<module>'
p105
sa(dp106
g66
S'/home/leo/Dropbox/web2py/gluon/globals.py'
p107
sg68
(dp108
S'self'
p109
S'undefined'
p110
sS'f'
S'<function insert>'
p111
ssg74
I372
sg75
(dp112
I367
S'        self.menu = []             # used by the default view layout'
p113
sI368
S'        self.files = []            # used by web2py_ajax.html'
p114
sI369
S'        self.generic_patterns = []  # patterns to allow generic views'
p115
sI370
S"        self.delimiters = ('{{', '}}')"
p116
sI371
S'        self._vars = None'
p117
sI372
S'        self._caller = lambda f: f()'
p118
sI373
S'        self._view_environment = None'
p119
sI374
S'        self._custom_commit = None'
p120
sI375
S'        self._custom_rollback = None'
p121
sI376
S''
ssg87
S'(f=<function insert>)'
p122
sg89
S'<lambda>'
p123
sa(dp124
g66
S'/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/controllers/appadmin.py'
p125
sg68
(dp126
S'global request'
p127
S"<Storage {'_vars': <Storage {'first_name': 'Lean...o/Dropbox/web2py/applications/SEACAT_ingresos/'}>"
p128
sS'request.vars'
p129
S"<Storage {'first_name': 'Leandro', 'last_name': ...47alfatango', 'registration_key': '', 'obs': ''}>"
p130
sS'global session'
p131
S"<Storage {'last_query': 'db.auth_group.id>0', '_...9c85e', 'a1024995-267f-4b74-9104-a38baf8c373a']}>"
p132
sS'form'
p133
S'<gluon.sqlhtml.SQLFORM object>'
p134
sS'form.accepts'
p135
S'<bound method SQLFORM.accepts of <gluon.sqlhtml.SQLFORM object>>'
p136
ssg74
I144
sg75
(dp137
I139
S''
sI140
S''
sI141
S'def insert():'
p138
sI142
S'    (db, table) = get_table(request)'
p139
sI143
S'    form = SQLFORM(db[table], ignore_rw=ignore_rw)'
p140
sI144
S'    if form.accepts(request.vars, session):'
p141
sI145
S"        response.flash = T('new record inserted')"
p142
sI146
S'    return dict(form=form, table=db[table])'
p143
sI147
S''
sI148
S''
ssg87
S'()'
p144
sg89
S'insert'
p145
sa(dp146
g66
S'/home/leo/Dropbox/web2py/gluon/sqlhtml.py'
p147
sg68
(dp148
S'self.vars.id'
p149
S'None'
p150
sS'fields'
p151
S"{'created_by': 0, 'created_on': None, 'email': 'colomboleandro@pioix.edu.ar', 'first_name': 'Leandro', 'gender': 'Masculino', 'is_active': True, 'last_login': None, 'last_name': 'Colombo Vi\\xc3\\xb1a', 'middle_name': 'Enrique', 'modified_by': 0, ...}"
p152
sS'self'
p153
S'<gluon.sqlhtml.SQLFORM object>'
p154
sS'self.vars'
p155
S"<Storage {'first_name': 'Leandro', 'last_name': ...ey': '', 'email': 'colomboleandro@pioix.edu.ar'}>"
p156
sS'self.table.insert'
p157
S'<bound method Table.insert of <Table auth_user (...s,is_active,created_by,modified_on,modified_by)>>'
p158
sS'self.table'
p159
S'<Table auth_user (id,first_name,last_name,email,...bs,is_active,created_by,modified_on,modified_by)>'
p160
ssg74
I1574
sg75
(dp161
I1569
S'                    self.vars.id = self.record[self.id_field_name]'
p162
sI1570
S'                    if fields:'
p163
sI1571
S'                        self.table._db(self.table._id == self.record['
p164
sI1572
S'                                       self.id_field_name]).update(**fields)'
p165
sI1573
S'                else:'
p166
sI1574
S'                    self.vars.id = self.table.insert(**fields)'
p167
sI1575
S'        self.accepted = ret'
p168
sI1576
S'        return ret'
p169
sI1577
S''
sI1578
S'    AUTOTYPES = {'
p170
ssg87
S"(self=<gluon.sqlhtml.SQLFORM object>, request_vars=<Storage {'first_name': 'Leandro', 'last_name': ...47alfatango', 'registration_key': '', 'obs': ''}>, session=<Storage {'last_query': 'db.auth_group.id>0', '_...9c85e', 'a1024995-267f-4b74-9104-a38baf8c373a']}>, formname='auth_user/create', keepvalues=False, onvalidation=None, dbio=True, hideerror=False, detect_record_change=False, **kwargs={})"
p171
sg89
S'accepts'
p172
sa(dp173
g66
S'/home/leo/Dropbox/web2py/gluon/dal.py'
p174
sg68
(dp175
S'self._listify'
p176
S'<bound method Table._listify of <Table auth_user...s,is_active,created_by,modified_on,modified_by)>>'
p177
sS'fields'
p178
S"{'created_by': 0, 'created_on': None, 'email': 'colomboleandro@pioix.edu.ar', 'first_name': 'Leandro', 'gender': 'Masculino', 'is_active': True, 'last_login': None, 'last_name': 'Colombo Vi\\xc3\\xb1a', 'middle_name': 'Enrique', 'modified_by': 0, ...}"
p179
sS'self'
p180
S'<Table auth_user (id,first_name,last_name,email,...bs,is_active,created_by,modified_on,modified_by)>'
p181
sS'ret'
p182
g110
sS'self._db._adapter'
p183
S'<gluon.dal.PostgreSQLAdapter object>'
p184
sS'self._db._adapter.insert'
p185
S'<bound method PostgreSQLAdapter.insert of <gluon.dal.PostgreSQLAdapter object>>'
p186
sS'self._db'
p187
S'<DAL uri="postgres:******@wspio1.pioix.edu.ar/seacat">'
p188
ssg74
I9003
sg75
(dp189
I8998
S''
sI8999
S'    def insert(self, **fields):'
p190
sI9000
S'        fields = self._defaults(fields)'
p191
sI9001
S'        self._attempt_upload(fields)'
p192
sI9002
S'        if any(f(fields) for f in self._before_insert): return 0'
p193
sI9003
S'        ret =  self._db._adapter.insert(self, self._listify(fields))'
p194
sI9004
S'        if ret and self._after_insert:'
p195
sI9005
S'            fields = Row(fields)'
p196
sI9006
S'            [f(fields,ret) for f in self._after_insert]'
p197
sI9007
S'        return ret'
p198
ssg87
S"(self=<Table auth_user (id,first_name,last_name,email,...bs,is_active,created_by,modified_on,modified_by)>, **fields={'created_by': 0, 'created_on': None, 'email': 'colomboleandro@pioix.edu.ar', 'first_name': 'Leandro', 'gender': 'Masculino', 'is_active': True, 'last_login': None, 'last_name': 'Colombo Vi\\xc3\\xb1a', 'middle_name': 'Enrique', 'modified_by': 0, ...})"
p199
sg89
g145
sa(dp200
g66
S'/home/leo/Dropbox/web2py/gluon/dal.py'
p201
sg68
(dp202
S'e'
S"ProgrammingError('ERROR', '23503', 'inserci\\xc3\\...a1nea \\xc2\\xabauth_user_created_by_fkey\\xc2\\xbb')"
p203
ssg74
I1311
sg75
(dp204
I1312
S"        if hasattr(table,'_primarykey'):"
p205
sI1313
S'            return dict([(k[0].name, k[1]) for k in fields \\'
p206
sI1314
S'                             if k[0].name in table._primarykey])'
p207
sI1315
S'        id = self.lastrowid(table)'
p208
sI1306
S'            self.execute(query)'
p209
sI1307
S'        except Exception:'
p210
sI1308
S'            e = sys.exc_info()[1]'
p211
sI1309
S"            if hasattr(table,'_on_insert_error'):"
p212
sI1310
S'                return table._on_insert_error(table,fields,e)'
p213
sI1311
S'            raise e'
p214
ssg87
S"(self=<gluon.dal.PostgreSQLAdapter object>, table=<Table auth_user (id,first_name,last_name,email,...bs,is_active,created_by,modified_on,modified_by)>, fields=[(<gluon.dal.Field object>, 'Leandro'), (<gluon.dal.Field object>, 'Colombo Vi\\xc3\\xb1a'), (<gluon.dal.Field object>, 'Enrique'), (<gluon.dal.Field object>, 'Masculino'), (<gluon.dal.Field object>, True), (<gluon.dal.Field object>, ''), (<gluon.dal.Field object>, 0), (<gluon.dal.Field object>, ''), (<gluon.dal.Field object>, ''), (<gluon.dal.Field object>, None), (<gluon.dal.Field object>, None), (<gluon.dal.Field object>, datetime.datetime(2014, 1, 21, 12, 30, 24)), (<gluon.dal.Field object>, 0), (<gluon.dal.Field object>, <gluon.validators.LazyCrypt object>), (<gluon.dal.Field object>, ''), (<gluon.dal.Field object>, 'colomboleandro@pioix.edu.ar')])"
p215
sg89
g145
sasS'pyver'
p216
S'Python 2.7.5+: /usr/bin/python (prefix: /usr)'
p217
sS'session'
p218
g61
(S's\xbd\x01\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_orderby</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_query</td><td style="vertical-align:top;">:</td><td><div>db.auth_group.id&gt;0</div></td></tr></table></div>'
tRp219
sS'etype'
p220
S"<class 'gluon.contrib.pg8000.errors.ProgrammingError'>"
p221
sS'date'
p222
S'Tue Jan 21 12:31:02 2014'
p223
sS'response'
p224
g61
(S's\x03 \x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f9b202865e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_seacat_ingresos</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a2589693-9f4a-40df-9f14-2fe733002bfd<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="brand" data-w2p_disable_with="default" href="/SEACAT_ingresos/default/index"><img alt="Logo de SEACAT" src="/SEACAT_ingresos/static/Logo_seacat_mini.png" /></a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>modificar</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/design/SEACAT_ingresos</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>db</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SEACAT_ingresos/appadmin/index</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>estado</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SEACAT_ingresos/appadmin/state</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>cach\xc3\xa9</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SEACAT_ingresos/appadmin/ccache</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Comienzo</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SEACAT_ingresos/default/start</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Leandro E. Colombo Vi\xc3\xb1a &lt;colomboleandro@pioix.edu.ar&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>Sistema de Inscripciones para el Colegio P\xc3\xado IX</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>Inscripciones, P\xc3\xado IX, Ingresantes, SEACAT</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^appadmin/\\w+\\.py$</div></td></tr><tr><td><div>^appadmin/insert/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_seacat_ingresos</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/sessions/127.0.0.1-a2589693-9f4a-40df-9f14-2fe733002bfd&#x27;, mode &#x27;rb+&#x27; at 0x7f9b341906f0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/sessions/127.0.0.1-a2589693-9f4a-40df-9f14-2fe733002bfd</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>f8952decf5cebbee36e3d49cd4abcff5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a2589693-9f4a-40df-9f14-2fe733002bfd</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_seacat_ingresos</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>SEACAT_ingresos</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div>Administraci\xc3\xb3n de Base de Datos (appadmin)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>SEACAT</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>appadmin.html</div></td></tr></table></div>'
tRp225
sS'locals'
p226
(dp227
S'fields'
p228
S"[(<gluon.dal.Field object>, 'Leandro'), (<gluon.dal.Field object>, 'Colombo Vi\\xc3\\xb1a'), (<gluon.dal.Field object>, 'Enrique'), (<gluon.dal.Field object>, 'Masculino'), (<gluon.dal.Field object>, True), (<gluon.dal.Field object>, ''), (<gluon.dal.Field object>, 0), (<gluon.dal.Field object>, ''), (<gluon.dal.Field object>, ''), (<gluon.dal.Field object>, None), (<gluon.dal.Field object>, None), (<gluon.dal.Field object>, datetime.datetime(2014, 1, 21, 12, 30, 24)), (<gluon.dal.Field object>, 0), (<gluon.dal.Field object>, <gluon.validators.LazyCrypt object>), (<gluon.dal.Field object>, ''), (<gluon.dal.Field object>, 'colomboleandro@pioix.edu.ar')]"
p229
sS'self'
p230
S'<gluon.dal.PostgreSQLAdapter object>'
p231
sS'e'
S"ProgrammingError('ERROR', '23503', 'inserci\\xc3\\...a1nea \\xc2\\xabauth_user_created_by_fkey\\xc2\\xbb')"
p232
sS'table'
p233
S'<Table auth_user (id,first_name,last_name,email,...bs,is_active,created_by,modified_on,modified_by)>'
p234
sS'query'
p235
S'"INSERT INTO auth_user(first_name,last_name,middl...8e4520e812888\',\'\',\'colomboleandro@pioix.edu.ar\');"'
p236
sssS'traceback'
p237
S'Traceback (most recent call last):\n  File "/home/leo/Dropbox/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/controllers/appadmin.py", line 617, in <module>\n  File "/home/leo/Dropbox/web2py/gluon/globals.py", line 372, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/controllers/appadmin.py", line 144, in insert\n    if form.accepts(request.vars, session):\n  File "/home/leo/Dropbox/web2py/gluon/sqlhtml.py", line 1574, in accepts\n    self.vars.id = self.table.insert(**fields)\n  File "/home/leo/Dropbox/web2py/gluon/dal.py", line 9003, in insert\n    ret =  self._db._adapter.insert(self, self._listify(fields))\n  File "/home/leo/Dropbox/web2py/gluon/dal.py", line 1311, in insert\n    raise e\nProgrammingError: (\'ERROR\', \'23503\', \'inserci\\xc3\\xb3n o actualizaci\\xc3\\xb3n en la tabla \\xc2\\xabauth_user\\xc2\\xbb viola la llave for\\xc3\\xa1nea \\xc2\\xabauth_user_created_by_fkey\\xc2\\xbb\')\n'
p238
s.