(dp1
S'output'
p2
S"<class 'gluon.contrib.pg8000.errors.ProgrammingError'> ('ERROR', '42P01', 'no existe la relaci\\xc3\\xb3n \\xc2\\xabauth_user\\xc2\\xbb')"
p3
sS'layer'
p4
S'/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/models/db.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\n#########################################################################\n## This scaffolding model makes your app work on Google App Engine too\n## File is released under public domain and you can use without limitations\n#########################################################################\n\n## if SSL/HTTPS is properly configured and you want all HTTP requests to\n## be redirected to HTTPS, uncomment the line below:\n# request.requires_https()\n\nif SUSPEND_SERVICE:\n    message = "<html><body><h2>"\n    message += T("System is under maitenance, please come back later.")\n    message += "</h2><h3>"\n    message += T("Sorry for the inconvenience")\n    message += "</h3><p>"\n    message += str(NOW)\n    message += "</p></body></html>"\n    raise HTTP(503, message)\n\ndb = DAL(DBURI, check_reserved=[DB_ENGINE])\n    \n#if not request.env.web2py_runtime_gae:\n    ## if NOT running on Google App Engine use SQLite or other DB\n    #db = DAL(\'sqlite://storage.sqlite\',pool_size=1,check_reserved=[\'all\'])\n    ## To connect to a PostgreSQL DB: postgres://username:password@server/database\n    ## DBURI contains the string to configure de DB it\'s stored in 0.py\n#    db = DAL(DBURI, check_reserved=[DB_ENGINE])\n#else:\n    ## connect to Google BigTable (optional \'google:datastore://namespace\')\n#    db = DAL(\'google:datastore\')\n    ## store sessions and tickets there\n#   session.connect(request, response, db=db)\n    ## or store session in Memcache, Redis, etc.\n    ## from gluon.contrib.memdb import MEMDB\n    ## from google.appengine.api.memcache import Client\n    ## session.connect(request, response, db = MEMDB(Client()))\n\n## by default give a view/generic.extension to all actions from localhost\n## none otherwise. a pattern can be \'controller/function.extension\'\nresponse.generic_patterns = [\'*\'] if request.is_local else []\n## (optional) optimize handling of static files\n# response.optimize_css = \'concat,minify,inline\'\n# response.optimize_js = \'concat,minify,inline\'\n\n#########################################################################\n## Here is sample code if you need for\n## - email capabilities\n## - authentication (registration, login, logout, ... )\n## - authorization (role based authorization)\n## - services (xml, csv, json, xmlrpc, jsonrpc, amf, rss)\n## - old style crud actions\n## (more options discussed in gluon/tools.py)\n#########################################################################\n\nfrom gluon.tools import Auth, Crud, Service, PluginManager, prettydate\nauth = Auth(db)\ncrud, service, plugins = Crud(db), Service(), PluginManager()\n\n## Adding "last_login" and "obs" fields to \'auth_user\' table\nauth.settings.extra_fields[\'auth_user\'] = [\n                                           Field(\'middle_name\', label=T("Middle Name")),\n                                           # Falta agregar notnull...\n                                           Field(\'gender\', required=True, requires=IS_IN_SET(GENDER_LIST), label=T("Gender")),\n                                           Field(\'created_on\', \'datetime\', label=T("Created On"), writable=False, readable=True),\n                                           Field(\'last_login\', \'datetime\', label=T("Last Login"), writable=False, readable=True),\n                                           Field(\'obs\', \'text\', label=T("Observations")),\n                                           #Field(\'personal_data_id\', \'reference personal_data\', writable=False, readable=False, requires=IS_IN_DB(db, \'personal_data.id\'), label=T("Personal Data ID")),\n                                           #Field(\'address_id\', \'reference address\', writable=False, readable=False, requires=IS_IN_DB(db, \'address.id\'), label=T("Address ID"))\n                                           ]\n## create all tables needed by auth if not custom tables\nauth.define_tables(username=False, signature=True, migrate=True)\n\n## Changing format to \'auth_user\' table:\ndb.auth_user._format = \'%(last_name)s\'+", "+\'%(first_name)s\'+" "+\'%(middle_name)s\'\n\n## Settings for \'first_name\' field:\ndb.auth_user.first_name.required=True\ndb.auth_user.first_name.requires=IS_NOT_EMPTY()\n\n## Settings for \'last_name\' field:\ndb.auth_user.last_name.required=True\ndb.auth_user.last_name.requires=IS_NOT_EMPTY()\n\n## Setting email to unique\ndb.auth_user.email.requires = [IS_EMAIL(), IS_NOT_IN_DB(db, \'auth_user.email\')]\ndb.auth_user.email.unique=True\ndb.auth_user.email.error_message=T("This email is already in our database, please choose another one")\n\n## Changing attributes:\ndb.auth_group.description.readable = True\n\n## Removing "remember me" feature at login form\nauth.settings.remember_me_form = False\n\n## Defining new table for Images:\ndb.define_table(\'images\',\n                Field(\'name\', label=T("Name")),\n                Field(\'file\', \'upload\', label=T("File"), required=True),\n                auth.signature\n                )\n\n## Defining new table for address:\ndb.define_table(\'address\',\n                Field(\'uid\', \'reference auth_user\', writable=False, readable=False, requires=IS_IN_DB(db, \'auth_user.id\'), label=T("User ID")),\n                Field(\'street\', required=True, notnull=True, label=T("Street")),\n                Field(\'building\', \'integer\', label=T("Building")),\n                Field(\'floor\', label=T("Floor")),\n                Field(\'door\', label=T("Door")),\n                Field(\'apartment\', label=T("Apartment")),\n                Field(\'street1\', label=T("Street 1")),\n                Field(\'street2\', label=T("Street 2")),\n                Field(\'zip_code\', label=T("ZIP Code")),\n                Field(\'loc\', default=PROVINCES_LIST[2], label=T("Locality")),\n                Field(\'prov\', requires=IS_IN_SET(PROVINCES_LIST), default=PROVINCES_LIST[2], label=T("Province")),\n                Field(\'obs\', \'text\', label=T("Observations")),\n                auth.signature,\n                format=\'%(street)s\'+" "+\'%(building)s\'+" "+\'%(floor)s\'+" "+\'%(door)s\'+" "+\'%(apartment)s\'\n                )\n\n## Defining new table for personal data\ndb.define_table(\'personal_data\',\n                Field(\'uid\', \'reference auth_user\', writable=False, readable=False, requires=IS_IN_DB(db, \'auht_user.id\'), label=T("User ID")),\n                Field(\'doc_type\', required=True, requires=IS_IN_SET(DOC_TYPE_SET), notnull=True, default=DOC_TYPE_SET[0], label=T("Document Type")),\n                Field(\'doc\', \'string\', length=8, required=True, requires=IS_MATCH(\'\\d{8}\'), notnull=True, unique=True, label=T("Document"), comment=T("Insert only numbers without dots. i.e.: 12654897")),\n                Field(\'nac\', required=True, notnull=True, default="Argentina", label=T("Nacionality")),\n                Field(\'cuil\', \'string\', length=11, requires=IS_MATCH(\'\\d{11}\'), notnull=True, unique=True, label="CUIL"),\n                Field(\'dob\', \'date\', required=True, requires=IS_DATE(format=(\'%d-%m-%Y\')), notnull=True, label=T("Day of Birth")),\n                ## Commented because they are in \'auth_user\' table:\n                #Field(\'first_name\', required=True, notnull=True, label=T("First Name")),\n                #Field(\'middle_name\', label=T("Middle Name")),\n                #Field(\'last_name\', required=True, notnull=True, label=T("Last Name")),\n                #Field(\'mail1\', required=True, requires=IS_EMAIL(), notnull=True, label=T("email 1")),\n                Field(\'mail2\', requires=IS_EMPTY_OR(IS_EMAIL()), label=T("Alternative email"), comment=T("Another contact mail")),\n                Field(\'tel1_type\', required=True, requires=IS_IN_SET(TEL_TYPE_SET), notnull=True, default=TEL_TYPE_SET[0], label=T("Principal Phone Type")),\n                Field(\'tel1\', length=8, required=True, requires=IS_MATCH(\'\\d{8}\'), notnull=True, label=T("Principal Phone Number")),\n                Field(\'tel2_type\', requires=IS_IN_SET(TEL_TYPE_SET), default=TEL_TYPE_SET[0], label=T("Alternative Phone Type")),\n                Field(\'tel2\', length=8, requires=IS_MATCH(\'\\d{8}\'), label=T("Alternative Phone Number")),\n                Field(\'photo\', \'upload\', requires=IS_EMPTY_OR(IS_IMAGE(extensions=VALID_IMG_EXTENSION_SET, maxsize=MAX_PHOTO_SIZE)), label=T("Photo")),\n                Field(\'avatar\', \'upload\', requires=IS_EMPTY_OR(IS_IMAGE(extensions=VALID_IMG_EXTENSION_SET, maxsize=MAX_AVATAR_SIZE)), label=T("Avatar")),\n                Field(\'twitter\', requires=IS_EMPTY_OR(IS_URL()), label=T("Twitter Profile")),\n                Field(\'facebook\', requires=IS_EMPTY_OR(IS_URL()), label=T("Facebook Profile")),\n                Field(\'obs\', \'text\', label=T("Observations")),\n                auth.signature,\n                format=\'%(doc)s\'\n                )\n#db.personal_data.age = Field.Virtual(lambda row: (request.now-row.personal_data.dob).years)\n\n## Defining new table for Fathers.\ndb.define_table(\'father\',\n                Field(\'father_id\', \'reference auth_user\', writable=False, readable=False, requires=IS_IN_DB(db, \'auth_user.id\'), label=T("Father ID")),\n                Field(\'children_in_school\', \'boolean\', label=T("Do you have children in our school?")),\n                Field(\'children_name\', label=T("Children name")),\n                Field(\'student_network\', \'boolean\', label=T("Does your son goes to a school in our network?")),\n                Field(\'student_school\', requires=IS_EMPTY_OR(IS_IN_SET(SCHOOL_NETWORK_LIST)), label=T("Choose your school")),\n                auth.signature,\n                format=\'%(db.auth_user.last_name)s\'+\', \'+\'%(db.auth_user.first_name)s\'+\' \'+\'%(db.auth_user.middle_name)s\'\n               )\n\n\nif FIRST_DEPLOYMENT:\n    ## Adding Groups in FIRST_DEPLOYMENT:\n    db.auth_group.insert(role=\'root\', description=\'Superadministrador\')\n    db.auth_group.insert(role=\'empleado\', description=\'Empleado de la Casa\')\n    db.auth_group.insert(role=\'soporte\', description=\'Soporte T\xc3\xa9cnico\')\n    db.auth_group.insert(role=\'directivo\', description=\'Directivo\')\n    db.auth_group.insert(role=\'director\', description=\'Director General\')\n    db.auth_group.insert(role=\'rector\', description=\'Rector del Colegio\')\n    db.auth_group.insert(role=\'secretaria\', description=\'Secretar\xc3\xada\')\n    db.auth_group.insert(role=\'secretario\', description=\'Secretario\')\n    db.auth_group.insert(role=\'derivaciones\', description=\'Oficina de Derivaciones\')\n    db.auth_group.insert(role=\'eoe\', description=\'Equipo de Orientaci\xc3\xb3n Escolar\')\n    db.auth_group.insert(role=\'administracion\', description=\'Administraci\xc3\xb3n\')\n    db.auth_group.insert(role=\'administrador\', description=\'Administrador\')\n    db.auth_group.insert(role=\'caja\', description=\'Caja\')\n    db.auth_group.insert(role=\'padre\', description=\'Padre o Madre\')\n    db.auth_group.insert(role=\'candidato\', description=\'Ingresante\')\n\n    ## Adding permission in FIRST_DEPLOYMENT:\n    auth.add_permission(db.auth_group(role=\'root\').id, \'create\', db.auth_user, 0)\n    auth.add_permission(db.auth_group(role=\'root\').id, \'view\', db.auth_user, 0)\n    auth.add_permission(db.auth_group(role="derivaciones").id, \'create new father\', db.auth_user, 0)\n    auth.add_permission(db.auth_group(role="derivaciones").id, \'view fathers list\', db.auth_user, 0)\n\n\n## configure email\nmail = auth.settings.mailer\nmail.settings.server = \'logging\' or \'smtp.gmail.com:587\'\nmail.settings.sender = \'soportetecnico@pioix.edu.ar\'\nmail.settings.login = \'soportetecnico:deagostini\'\n\n## configure auth policy\nauth.settings.registration_requires_verification = True\nauth.settings.registration_requires_approval = True\nauth.settings.reset_password_requires_verification = True\n\n## if you need to use OpenID, Facebook, MySpace, Twitter, Linkedin, etc.\n## register with janrain.com, write your domain:api_key in private/janrain.key\nfrom gluon.contrib.login_methods.rpx_account import use_janrain\nuse_janrain(auth, filename=\'private/janrain.key\')\n\n#########################################################################\n## Define your tables below (or better in another model file) for example\n##\n## >>> db.define_table(\'mytable\',Field(\'myfield\',\'string\'))\n##\n## Fields can be \'string\',\'text\',\'password\',\'integer\',\'double\',\'boolean\'\n##       \'date\',\'time\',\'datetime\',\'blob\',\'upload\', \'reference TABLENAME\'\n## There is an implicit \'id integer autoincrement\' field\n## Consult manual for more options, validators, etc.\n##\n## More API examples for controllers:\n##\n## >>> db.mytable.insert(myfield=\'value\')\n## >>> rows=db(db.mytable.myfield==\'value\').select(db.mytable.ALL)\n## >>> for row in rows: print row.id, row.myfield\n#########################################################################\n\n## after defining tables, uncomment below to enable auditing\n# auth.enable_record_versioning(db)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'gluon.contrib.pg8000.errors'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of ProgrammingError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of ProgrammingError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of ProgrammingError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of ProgrammingError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of ProgrammingError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of ProgrammingError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of ProgrammingError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of ProgrammingError object>'
p35
sS'__class__'
p36
S"<class 'gluon.contrib.pg8000.errors.ProgrammingError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of ProgrammingError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of ProgrammingError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of ProgrammingError object>"
p45
sS'args'
p46
S"('ERROR', '42P01', 'no existe la relaci\\xc3\\xb3n \\xc2\\xabauth_user\\xc2\\xbb')"
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of ProgrammingError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of ProgrammingError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of ProgrammingError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of ProgrammingError object>"
p57
ssS'evalue'
p58
S"('ERROR', '42P01', 'no existe la relaci\\xc3\\xb3n \\xc2\\xabauth_user\\xc2\\xbb')"
p59
sS'request'
p60
cgluon.html
XML_unpickle
p61
(S's\xb5e\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>SEACAT_ingresos</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-890a02b4-d81a-452d-b5f4-fe4e888bcdeb<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_isbp</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-f7d6e8bc-faca-433a-87b3-3d7e74279bdd<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_pgday</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-4b839bf6-587f-4a54-9d21-64fdbe2253ae<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_seacat_ingresos</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a2589693-9f4a-40df-9f14-2fe733002bfd<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-e036a97f-f1cb-4429-807f-e6a9668cde90<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>es,es-419;q=0.8,en-US;q=0.6,en;q=0.4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_isbp=127.0.0.1-f7d6e8bc-faca-433a-87b3-3d7e74279bdd; __utma=96992031.17915714.1390050310.1390050310.1390057708.2; __utmc=96992031; __utmz=96992031.1390050310.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); session_id_pgday=127.0.0.1-4b839bf6-587f-4a54-9d21-64fdbe2253ae; session_id_seacat_ingresos=127.0.0.1-a2589693-9f4a-40df-9f14-2fe733002bfd; session_id_welcome=127.0.0.1-e036a97f-f1cb-4429-807f-e6a9668cde90; session_id_admin=127.0.0.1-890a02b4-d81a-452d-b5f4-fe4e888bcdeb</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/SEACAT_ingresos/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>45155</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>larrea-lmde</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/&#x27;, &#x27;/home/leo/Dropbox/web2py/applications/admin/&#x27;, &#x27;/home/leo/Dropbox/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/leo/Dropbox/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x19e21b8: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;larrea-lmde&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/leo/Dropbox/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/leo/Dropbox/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>es,es-419;q=0.8,en-US;q=0.6,en;q=0.4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_isbp=127.0.0.1-f7d6e8bc-faca-433a-87b3-3d7e74279bdd; __utma=96992031.17915714.1390050310.1390050310.1390057708.2; __utmc=96992031; __utmz=96992031.1390050310.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); session_id_pgday=127.0.0.1-4b839bf6-587f-4a54-9d21-64fdbe2253ae; session_id_seacat_ingresos=127.0.0.1-a2589693-9f4a-40df-9f14-2fe733002bfd; session_id_welcome=127.0.0.1-e036a97f-f1cb-4429-807f-e6a9668cde90; session_id_admin=127.0.0.1-890a02b4-d81a-452d-b5f4-fe4e888bcdeb</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>larrea-lmde</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/SEACAT_ingresos/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>45155</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/SEACAT_ingresos/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>larrea-lmde</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/leo/Dropbox/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.8.2-stable+timestamp.2013.11.28.13.54.07</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f9b5392e1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x19560b8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f9b1c38da50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f9b5392e1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x19560b8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f9b1c38da50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/&#x27;, &#x27;/home/leo/Dropbox/web2py/applications/admin/&#x27;, &#x27;/home/leo/Dropbox/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/leo/Dropbox/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x19e21b8: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;larrea-lmde&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/leo/Dropbox/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/leo/Dropbox/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>larrea-lmde</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.8.2-stable+timestamp.2013.11.28.13.54.07</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 1, 21, 12, 20, 16, 933732)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/SEACAT_ingresos/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 1, 21, 15, 20, 16, 933761)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>SEACAT_ingresos/127.0.0.1.2014-01-21.12-20-16.d61d949b-eba2-4308-9f21-3fe9012b983a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f9b1c3bd990&gt;</div></td></tr></table></div>'
tRp62
sS'frames'
p63
(lp64
(dp65
S'file'
p66
S'/home/leo/Dropbox/web2py/gluon/restricted.py'
p67
sS'dump'
p68
(dp69
S'environment'
p70
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}"
p71
sS'ccode'
p72
S'<code object <module> at 0x7f9b30569130, file "/...lications/SEACAT_ingresos/models/db.py", line 12>'
p73
ssS'lnum'
p74
I217
sS'lines'
p75
(dp76
I212
S'    try:'
p77
sI213
S'        if isinstance(code, types.CodeType):'
p78
sI214
S'            ccode = code'
p79
sI215
S'        else:'
p80
sI216
S'            ccode = compile2(code, layer)'
p81
sI217
S'        exec ccode in environment'
p82
sI218
S'    except HTTP:'
p83
sI219
S'        raise'
p84
sI220
S'    except RestrictedError:'
p85
sI221
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p86
ssS'call'
p87
S"(code='# -*- coding: utf-8 -*-\\n\\n#######################...ble auditing\\n# auth.enable_record_versioning(db)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}, layer='/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/models/db.py')"
p88
sS'func'
p89
S'restricted'
p90
sa(dp91
g66
S'/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/models/db.py'
p92
sg68
(dp93
S'username'
p94
S'undefined'
p95
sS'builtinFalse'
p96
S'False'
p97
sS'migrate'
p98
g95
sS'builtinTrue'
p99
S'True'
p100
sS'auth'
p101
S'<gluon.tools.Auth object>'
p102
sS'auth.define_tables'
p103
S'<bound method Auth.define_tables of <gluon.tools.Auth object>>'
p104
sS'signature'
p105
g95
ssg74
I73
sg75
(dp106
I68
S'                                           Field(\'obs\', \'text\', label=T("Observations")),'
p107
sI69
S'                                           #Field(\'personal_data_id\', \'reference personal_data\', writable=False, readable=False, requires=IS_IN_DB(db, \'personal_data.id\'), label=T("Personal Data ID")),'
p108
sI70
S'                                           #Field(\'address_id\', \'reference address\', writable=False, readable=False, requires=IS_IN_DB(db, \'address.id\'), label=T("Address ID"))'
p109
sI71
S'                                           ]'
p110
sI72
S'## create all tables needed by auth if not custom tables'
p111
sI73
S'auth.define_tables(username=False, signature=True, migrate=True)'
p112
sI74
S''
sI75
S"## Changing format to 'auth_user' table:"
p113
sI76
S'db.auth_user._format = \'%(last_name)s\'+", "+\'%(first_name)s\'+" "+\'%(middle_name)s\''
p114
sI77
S''
ssg87
S'()'
p115
sg89
S'<module>'
p116
sa(dp117
g66
S'/home/leo/Dropbox/web2py/gluon/tools.py'
p118
sg68
(dp119
S'builtinformat'
p120
S'<built-in function format>'
p121
ssg74
I1737
sg75
(dp122
I1732
S'                    *extra_fields,'
p123
sI1733
S'                    **dict('
p124
sI1734
S'                        migrate=self.__get_migrate(settings.table_user_name,'
p125
sI1735
S'                                                   migrate),'
p126
sI1736
S'                        fake_migrate=fake_migrate,'
p127
sI1737
S"                        format='%(first_name)s %(last_name)s (%(id)s)'))"
p128
sI1738
S"        reference_table_user = 'reference %s' % settings.table_user_name"
p129
sI1739
S'        if not settings.table_group_name in db.tables:'
p130
sI1740
S'            extra_fields = settings.extra_fields.get('
p131
sI1741
S'                settings.table_group_name, []) + signature_list'
p132
ssg87
S'(self=<gluon.tools.Auth object>, username=False, signature=True, migrate=True, fake_migrate=False)'
p133
sg89
S'define_tables'
p134
sa(dp135
g66
S'/home/leo/Dropbox/web2py/gluon/dal.py'
p136
sg68
(dp137
S'fields'
p138
S'(<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <Table auth_signature (id,is_active,created_on,created_by,modified_on,modified_by)>)'
p139
sS'self'
p140
S'<DAL uri="postgres:******@wspio1.pioix.edu.ar/seacat">'
p141
sS'args'
p142
S"{'fake_migrate': False, 'format': '%(first_name)s %(last_name)s (%(id)s)', 'migrate': True}"
p143
sS'tablename'
p144
S"'auth_user'"
p145
sS'table'
p146
g95
sS'self.lazy_define_table'
p147
S'<bound method DAL.lazy_define_table of <DAL uri="postgres:******@wspio1.pioix.edu.ar/seacat">>'
p148
ssg74
I8139
sg75
(dp149
I8134
S'                    % (tablename,invalid_args))'
p150
sI8135
S'        if self._lazy_tables and not tablename in self._LAZY_TABLES:'
p151
sI8136
S'            self._LAZY_TABLES[tablename] = (tablename,fields,args)'
p152
sI8137
S'            table = None'
p153
sI8138
S'        else:'
p154
sI8139
S'            table = self.lazy_define_table(tablename,*fields,**args)'
p155
sI8140
S'        if not tablename in self.tables:'
p156
sI8141
S'            self.tables.append(tablename)'
p157
sI8142
S'        return table'
p158
sI8143
S''
ssg87
S'(self=<DAL uri="postgres:******@wspio1.pioix.edu.ar/seacat">, tablename=\'auth_user\', *fields=(<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <Table auth_signature (id,is_active,created_on,created_by,modified_on,modified_by)>), **args={\'fake_migrate\': False, \'format\': \'%(first_name)s %(last_name)s (%(id)s)\', \'migrate\': True})'
p159
sg89
S'define_table'
p160
sa(dp161
g66
S'/home/leo/Dropbox/web2py/gluon/dal.py'
p162
sg68
(dp163
S'polymodel'
p164
S'None'
p165
ssg74
I8176
sg75
(dp166
I8171
S'            try:'
p167
sI8172
S'                GLOBAL_LOCKER.acquire()'
p168
sI8173
S'                self._lastsql = self._adapter.create_table('
p169
sI8174
S'                    table,migrate=migrate,'
p170
sI8175
S'                    fake_migrate=fake_migrate,'
p171
sI8176
S'                    polymodel=polymodel)'
p172
sI8177
S'            finally:'
p173
sI8178
S'                GLOBAL_LOCKER.release()'
p174
sI8179
S'        else:'
p175
sI8180
S'            table._dbt = None'
p176
ssg87
S'(self=<DAL uri="postgres:******@wspio1.pioix.edu.ar/seacat">, tablename=\'auth_user\', *fields=(<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <Table auth_signature (id,is_active,created_on,created_by,modified_on,modified_by)>), **args={\'fake_migrate\': False, \'format\': \'%(first_name)s %(last_name)s (%(id)s)\', \'migrate\': True})'
p177
sg89
S'lazy_define_table'
p178
sa(dp179
g66
S'/home/leo/Dropbox/web2py/gluon/dal.py'
p180
sg68
(dp181
S'fake_migrate'
p182
g97
ssg74
I1086
sg75
(dp183
I1088
S'        return query'
p184
sI1089
S''
sI1090
S'    def migrate_table('
p185
sI1081
S'            if sql_fields != sql_fields_old:'
p186
sI1082
S'                self.migrate_table('
p187
sI1083
S'                    table,'
p188
sI1084
S'                    sql_fields, sql_fields_old,'
p189
sI1085
S'                    sql_fields_aux, None,'
p190
sI1086
S'                    fake_migrate=fake_migrate'
p191
sI1087
S'                    )'
p192
ssg87
S'(self=<gluon.dal.PostgreSQLAdapter object>, table=<Table auth_user (id,first_name,last_name,email,...bs,is_active,created_by,modified_on,modified_by)>, migrate=True, fake_migrate=False, polymodel=None)'
p193
sg89
S'create_table'
p194
sa(dp195
g66
S'/home/leo/Dropbox/web2py/gluon/dal.py'
p196
sg68
(dp197
S'self'
p198
S'<gluon.dal.PostgreSQLAdapter object>'
p199
sS'self.execute'
p200
S'<bound method PostgreSQLAdapter.execute of <gluon.dal.PostgreSQLAdapter object>>'
p201
sS'sub_query'
p202
S"'ALTER TABLE auth_user DROP COLUMN personal_data_id;'"
p203
ssg74
I1194
sg75
(dp204
I1189
S'                    if fake_migrate:'
p205
sI1190
S'                        if db._adapter.commit_on_alter_table:'
p206
sI1191
S'                            self.save_dbt(table,sql_fields_current)'
p207
sI1192
S"                        self.log('faked!\\n', table)"
p208
sI1193
S'                    else:'
p209
sI1194
S'                        self.execute(sub_query)'
p210
sI1195
S'                        # Caveat: mysql, oracle and firebird'
p211
sI1196
S'                        # do not allow multiple alter table'
p212
sI1197
S'                        # in one transaction so we must commit'
p213
sI1198
S'                        # partial transactions and'
p214
ssg87
S"(self=<gluon.dal.PostgreSQLAdapter object>, table=<Table auth_user (id,first_name,last_name,email,...bs,is_active,created_by,modified_on,modified_by)>, sql_fields={'created_by': {'length': 512, 'notnull': False, 'sortable': 15, 'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE', 'type': 'reference auth_user', 'unique': False}, 'created_on': {'length': 512, 'notnull': False, 'sortable': 11, 'sql': 'TIMESTAMP', 'type': 'datetime', 'unique': False}, 'email': {'length': 512, 'notnull': False, 'sortable': 4, 'sql': 'VARCHAR(512)', 'type': 'string', 'unique': False}, 'first_name': {'length': 128, 'notnull': False, 'sortable': 2, 'sql': 'VARCHAR(128)', 'type': 'string', 'unique': False}, 'gender': {'length': 512, 'notnull': False, 'sortable': 10, 'sql': 'VARCHAR(512)', 'type': 'string', 'unique': False}, 'id': {'length': 512, 'notnull': False, 'sortable': 1, 'sql': 'SERIAL PRIMARY KEY', 'type': 'id', 'unique': False}, 'is_active': {'length': 512, 'notnull': False, 'sortable': 14, 'sql': 'CHAR(1)', 'type': 'boolean', 'unique': False}, 'last_login': {'length': 512, 'notnull': False, 'sortable': 12, 'sql': 'TIMESTAMP', 'type': 'datetime', 'unique': False}, 'last_name': {'length': 128, 'notnull': False, 'sortable': 3, 'sql': 'VARCHAR(128)', 'type': 'string', 'unique': False}, 'middle_name': {'length': 512, 'notnull': False, 'sortable': 9, 'sql': 'VARCHAR(512)', 'type': 'string', 'unique': False}, ...}, sql_fields_old={'address_id': {'length': 512, 'notnull': False, 'sortable': 14, 'sql': 'INTEGER REFERENCES address (id) ON DELETE CASCADE', 'type': 'reference address', 'unique': False}, 'created_by': {'length': 512, 'notnull': False, 'sortable': 16, 'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE', 'type': 'reference auth_user', 'unique': False}, 'created_on': {'length': 512, 'notnull': False, 'sortable': 10, 'sql': 'TIMESTAMP', 'type': 'datetime', 'unique': False}, 'email': {'length': 512L, 'notnull': 0L, 'sortable': 4L, 'sql': 'VARCHAR(512)', 'type': 'string', 'unique': 0L}, 'first_name': {'length': 128L, 'notnull': 0L, 'sortable': 2L, 'sql': 'VARCHAR(128)', 'type': 'string', 'unique': 0L}, 'gender': {'length': 512, 'notnull': False, 'sortable': 10, 'sql': 'VARCHAR(512)', 'type': 'string', 'unique': False}, 'id': {'length': 512L, 'notnull': 0L, 'sortable': 1L, 'sql': 'SERIAL PRIMARY KEY', 'type': 'id', 'unique': 0L}, 'is_active': {'length': 512, 'notnull': False, 'sortable': 15, 'sql': 'CHAR(1)', 'type': 'boolean', 'unique': False}, 'last_login': {'length': 512L, 'notnull': 0L, 'sortable': 9L, 'sql': 'TIMESTAMP', 'type': 'datetime', 'unique': 0L}, 'last_name': {'length': 128L, 'notnull': 0L, 'sortable': 3L, 'sql': 'VARCHAR(128)', 'type': 'string', 'unique': 0L}, ...}, sql_fields_aux={'created_by': {'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE'}, 'created_on': {'sql': 'TIMESTAMP'}, 'email': {'sql': 'VARCHAR(512)'}, 'first_name': {'sql': 'VARCHAR(128)'}, 'gender': {'sql': 'VARCHAR(512)'}, 'id': {'sql': 'SERIAL PRIMARY KEY'}, 'is_active': {'sql': 'CHAR(1)'}, 'last_login': {'sql': 'TIMESTAMP'}, 'last_name': {'sql': 'VARCHAR(128)'}, 'middle_name': {'sql': 'VARCHAR(512)'}, ...}, logfile=None, fake_migrate=False)"
p215
sg89
S'migrate_table'
p216
sa(dp217
g66
S'/home/leo/Dropbox/web2py/gluon/dal.py'
p218
sg68
(dp219
S'a'
S"('ALTER TABLE auth_user DROP COLUMN personal_data_id;',)"
p220
sS'self'
p221
S'<gluon.dal.PostgreSQLAdapter object>'
p222
sS'b'
g21
sS'self.log_execute'
p223
S'<bound method PostgreSQLAdapter.log_execute of <gluon.dal.PostgreSQLAdapter object>>'
p224
ssg74
I1916
sg75
(dp225
I1920
S'        if isinstance(obj, CALLABLETYPES):'
p226
sI1911
S'        self.db._timings.append((command,time.time()-t0))'
p227
sI1912
S'        del self.db._timings[:-TIMINGSSIZE]'
p228
sI1913
S'        return ret'
p229
sI1914
S''
sI1915
S'    def execute(self, *a, **b):'
p230
sI1916
S'        return self.log_execute(*a, **b)'
p231
sI1917
S''
sI1918
S'    def represent(self, obj, fieldtype):'
p232
sI1919
S'        field_is_type = fieldtype.startswith'
p233
ssg87
S"(self=<gluon.dal.PostgreSQLAdapter object>, *a=('ALTER TABLE auth_user DROP COLUMN personal_data_id;',), **b={})"
p234
sg89
S'execute'
p235
sa(dp236
g66
S'/home/leo/Dropbox/web2py/gluon/dal.py'
p237
sg68
(dp238
S'a'
S"('ALTER TABLE auth_user DROP COLUMN personal_data_id;',)"
p239
sS'b'
g21
sS'self'
p240
S'<gluon.dal.PostgreSQLAdapter object>'
p241
sS'ret'
p242
g95
sS'self.cursor'
p243
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p244
sS'command'
p245
S"'ALTER TABLE auth_user DROP COLUMN personal_data_id;'"
p246
sS'self.cursor.execute'
p247
S'<bound method CursorWrapper._fn of <gluon.contrib.pg8000.dbapi.CursorWrapper object>>'
p248
ssg74
I1910
sg75
(dp249
I1905
S'            command = self.filter_sql_command(command)'
p250
sI1906
S'        if self.db._debug:'
p251
sI1907
S"            LOGGER.debug('SQL: %s' % command)"
p252
sI1908
S'        self.db._lastsql = command'
p253
sI1909
S'        t0 = time.time()'
p254
sI1910
S'        ret = self.cursor.execute(command, *a[1:], **b)'
p255
sI1911
S'        self.db._timings.append((command,time.time()-t0))'
p256
sI1912
S'        del self.db._timings[:-TIMINGSSIZE]'
p257
sI1913
S'        return ret'
p258
sI1914
S''
ssg87
S"(self=<gluon.dal.PostgreSQLAdapter object>, *a=('ALTER TABLE auth_user DROP COLUMN personal_data_id;',), **b={})"
p259
sg89
S'log_execute'
p260
sa(dp261
g66
S'/home/leo/Dropbox/web2py/gluon/contrib/pg8000/dbapi.py'
p262
sg68
(dp263
S'self'
p264
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p265
sS'args'
p266
S"('ALTER TABLE auth_user DROP COLUMN personal_data_id;',)"
p267
sS'fn'
p268
S'<function execute>'
p269
sS'kwargs'
p270
g21
ssg74
I246
sg75
(dp271
I241
S''
sI242
S'def require_open_cursor(fn):'
p272
sI243
S'    def _fn(self, *args, **kwargs):'
p273
sI244
S'        if self.cursor == None:'
p274
sI245
S'            raise CursorClosedError()'
p275
sI246
S'        return fn(self, *args, **kwargs)'
p276
sI247
S'    return _fn'
p277
sI248
S''
sI249
S'##'
p278
sI250
S'# The class of object returned by the {@link #ConnectionWrapper.cursor cursor method}.'
p279
ssg87
S"(self=<gluon.contrib.pg8000.dbapi.CursorWrapper object>, *args=('ALTER TABLE auth_user DROP COLUMN personal_data_id;',), **kwargs={})"
p280
sg89
S'_fn'
p281
sa(dp282
g66
S'/home/leo/Dropbox/web2py/gluon/contrib/pg8000/dbapi.py'
p283
sg68
(dp284
S'self._execute'
p285
S'<bound method CursorWrapper._execute of <gluon.contrib.pg8000.dbapi.CursorWrapper object>>'
p286
sS'self'
p287
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p288
sS'args'
p289
S'()'
p290
sS'operation'
p291
S"'ALTER TABLE auth_user DROP COLUMN personal_data_id;'"
p292
ssg74
I317
sg75
(dp293
I320
S'        new_query, new_args = convert_paramstyle(paramstyle, operation, args)'
p294
sI321
S'        try:'
p295
sI312
S'    @require_open_cursor'
p296
sI313
S'    def execute(self, operation, args=()):'
p297
sI314
S'        if not self._connection.in_transaction:'
p298
sI315
S'            self._connection.begin()'
p299
sI316
S'        self._override_rowcount = None'
p300
sI317
S'        self._execute(operation, args)'
p301
sI318
S''
sI319
S'    def _execute(self, operation, args=()):'
p302
ssg87
S"(self=<gluon.contrib.pg8000.dbapi.CursorWrapper object>, operation='ALTER TABLE auth_user DROP COLUMN personal_data_id;', args=())"
p303
sg89
g235
sa(dp304
g66
S'/home/leo/Dropbox/web2py/gluon/contrib/pg8000/dbapi.py'
p305
sg68
(dp306
S'new_args'
p307
S'()'
p308
sS'self.cursor'
p309
S'<gluon.contrib.pg8000.interface.Cursor object>'
p310
sS'self'
p311
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p312
sS'new_query'
p313
S"'ALTER TABLE auth_user DROP COLUMN personal_data_id;'"
p314
sS'self.cursor.execute'
p315
S'<bound method Cursor.execute of <gluon.contrib.pg8000.interface.Cursor object>>'
p316
ssg74
I322
sg75
(dp317
I320
S'        new_query, new_args = convert_paramstyle(paramstyle, operation, args)'
p318
sI321
S'        try:'
p319
sI322
S'            self.cursor.execute(new_query, *new_args)'
p320
sI323
S'        except ConnectionClosedError:'
p321
sI324
S"            # can't rollback in this case"
p322
sI325
S'            raise'
p323
sI326
S'        except:'
p324
sI317
S'        self._execute(operation, args)'
p325
sI318
S''
sI319
S'    def _execute(self, operation, args=()):'
p326
ssg87
S"(self=<gluon.contrib.pg8000.dbapi.CursorWrapper object>, operation='ALTER TABLE auth_user DROP COLUMN personal_data_id;', args=())"
p327
sg89
S'_execute'
p328
sa(dp329
g66
S'/home/leo/Dropbox/web2py/gluon/contrib/pg8000/interface.py'
p330
sg68
(dp331
S'self._stmt.execute'
p332
S'<bound method PreparedStatement.execute of <gluo...ntrib.pg8000.interface.PreparedStatement object>>'
p333
sS'kwargs'
p334
g21
sS'self'
p335
S'<gluon.contrib.pg8000.interface.Cursor object>'
p336
sS'args'
p337
S'()'
p338
sS'self._stmt'
p339
S'<gluon.contrib.pg8000.interface.PreparedStatement object>'
p340
ssg74
I399
sg75
(dp341
I394
S'                ## print "SimpleQuery:", query'
p342
sI395
S'                self._stmt = SimpleStatement(self.connection, query)'
p343
sI396
S'            else:'
p344
sI397
S'                # use PostgreSQL Extended Query Protocol'
p345
sI398
S'                self._stmt = PreparedStatement(self.connection, query, statement_name="", *[{"type": type(x), "value": x} for x in args])'
p346
sI399
S'            self._stmt.execute(*args, **kwargs)'
p347
sI400
S'        finally:'
p348
sI401
S'            self.connection._unnamed_prepared_statement_lock.release()'
p349
sI402
S''
sI403
S'    ##'
p350
ssg87
S"(self=<gluon.contrib.pg8000.interface.Cursor object>, query='ALTER TABLE auth_user DROP COLUMN personal_data_id;', *args=(), **kwargs={})"
p351
sg89
g235
sa(dp352
g66
S'/home/leo/Dropbox/web2py/gluon/contrib/pg8000/interface.py'
p353
sg68
(dp354
S'kwargs.get'
p355
S'<built-in method get of dict object>'
p356
sS'args'
p357
S'()'
p358
sS'self.c'
p359
S'<gluon.contrib.pg8000.protocol.Connection object>'
p360
sS'self'
p361
S'<gluon.contrib.pg8000.interface.PreparedStatement object>'
p362
sS'cmd'
p363
g95
sS'self._row_desc'
p364
S'None'
p365
sS'self.c.bind'
p366
S'<bound method Connection._fn of <gluon.contrib.pg8000.protocol.Connection object>>'
p367
sS'self._statement_name'
p368
S"''"
p369
sS'self._parse_row_desc'
p370
S'(None, [])'
p371
sS'kwargs'
p372
g21
sS'self._portal_name'
p373
S"'pg8000_portal_19'"
p374
ssg74
I169
sg75
(dp375
I164
S'                self._ongoing_row_count = 0'
p376
sI165
S'            if self._portal_name != None:'
p377
sI166
S'                self.c.close_portal(self._portal_name)'
p378
sI167
S'            self._command_complete = False'
p379
sI168
S'            self._portal_name = "pg8000_portal_%s" % self._statement_number'
p380
sI169
S'            self._row_desc, cmd = self.c.bind(self._portal_name, self._statement_name, args, self._parse_row_desc, kwargs.get("stream"))'
p381
sI170
S'            if self._row_desc:'
p382
sI171
S'                # We execute our cursor right away to fill up our cache.  This'
p383
sI172
S'                # prevents the cursor from being destroyed, apparently, by a rogue'
p384
sI173
S'                # Sync between Bind and Execute.  Since it is quite likely that'
p385
ssg87
S'(self=<gluon.contrib.pg8000.interface.PreparedStatement object>, *args=(), **kwargs={})'
p386
sg89
g235
sa(dp387
g66
S'/home/leo/Dropbox/web2py/gluon/contrib/pg8000/protocol.py'
p388
sg68
(dp389
S'self'
p390
S'<gluon.contrib.pg8000.protocol.Connection object>'
p391
sS'args'
p392
S"('pg8000_portal_19', '', (), (None, []), None)"
p393
sS'fn'
p394
S'<function bind>'
p395
sS'kwargs'
p396
g21
ssg74
I943
sg75
(dp397
I938
S''
sI939
S'def sync_on_error(fn):'
p398
sI940
S'    def _fn(self, *args, **kwargs):'
p399
sI941
S'        try:'
p400
sI942
S'            self._sock_lock.acquire()'
p401
sI943
S'            return fn(self, *args, **kwargs)'
p402
sI944
S'        except:'
p403
sI945
S'            self._sync()'
p404
sI946
S'            raise'
p405
sI947
S'        finally:'
p406
ssg87
S"(self=<gluon.contrib.pg8000.protocol.Connection object>, *args=('pg8000_portal_19', '', (), (None, []), None), **kwargs={})"
p407
sg89
g281
sa(dp408
g66
S'/home/leo/Dropbox/web2py/gluon/contrib/pg8000/protocol.py'
p409
sg68
(dp410
S'reader.handle_messages'
p411
S'<bound method MessageReader.handle_messages of <gluon.contrib.pg8000.protocol.MessageReader object>>'
p412
sS'reader'
p413
S'<gluon.contrib.pg8000.protocol.MessageReader object>'
p414
ssg74
I1142
sg75
(dp415
I1137
S''
sI1138
S'        # Return the new row desc, since it will have the format types we'
p416
sI1139
S'        # asked the server for'
p417
sI1140
S'        reader.add_message(RowDescription, lambda msg: (msg, None))'
p418
sI1141
S''
sI1142
S'        return reader.handle_messages()'
p419
sI1143
S''
sI1144
S'    def _copy_in_response(self, copyin, fileobj, old_reader):'
p420
sI1145
S'        if fileobj == None:'
p421
sI1146
S'            raise CopyQueryWithoutStreamError()'
p422
ssg87
S"(self=<gluon.contrib.pg8000.protocol.Connection object>, portal='pg8000_portal_19', statement='', params=(), parse_data=(None, []), copy_stream=None)"
p423
sg89
S'bind'
p424
sa(dp425
g66
S'/home/leo/Dropbox/web2py/gluon/contrib/pg8000/protocol.py'
p426
sg68
(dp427
S'msg'
p428
S'<gluon.contrib.pg8000.protocol.NoData object>'
p429
sS'handler'
p430
S'<bound method Connection._bind_nodata of <gluon.contrib.pg8000.protocol.Connection object>>'
p431
sS'retval'
p432
S'0'
sS'args'
p433
S"('pg8000_portal_19', <gluon.contrib.pg8000.protocol.MessageReader object>, None)"
p434
sS'kwargs'
p435
g21
ssg74
I911
sg75
(dp436
I906
S'            msg = self._conn._read_message()'
p437
sI907
S'            msg_handled = False'
p438
sI908
S'            for (msg_class, handler, args, kwargs) in self._msgs:'
p439
sI909
S'                if isinstance(msg, msg_class):'
p440
sI910
S'                    msg_handled = True'
p441
sI911
S'                    retval = handler(msg, *args, **kwargs)'
p442
sI912
S'                    if retval:'
p443
sI913
S'                        # The handler returned a true value, meaning that the'
p444
sI914
S'                        # message loop should be aborted.'
p445
sI915
S'                        if exc != None:'
p446
ssg87
S'(self=<gluon.contrib.pg8000.protocol.MessageReader object>)'
p447
sg89
S'handle_messages'
p448
sa(dp449
g66
S'/home/leo/Dropbox/web2py/gluon/contrib/pg8000/protocol.py'
p450
sg68
(dp451
S'reader.handle_messages'
p452
S'<bound method MessageReader.handle_messages of <gluon.contrib.pg8000.protocol.MessageReader object>>'
p453
sS'reader'
p454
S'<gluon.contrib.pg8000.protocol.MessageReader object>'
p455
ssg74
I1181
sg75
(dp456
I1184
S''
sI1185
S'    @sync_on_error'
p457
sI1176
S'        reader.add_message(CopyOutResponse, self._copy_out_response, copy_stream, reader)'
p458
sI1177
S'        reader.add_message(CopyInResponse, self._copy_in_response, copy_stream, reader)'
p459
sI1178
S"        reader.add_message(CommandComplete, lambda msg, out: out.setdefault('msg', msg) and False, output)"
p460
sI1179
S'        reader.add_message(ReadyForQuery, lambda msg: 1)'
p461
sI1180
S'        reader.delay_raising_exception = True'
p462
sI1181
S'        reader.handle_messages()'
p463
sI1182
S''
sI1183
S"        old_reader.return_value((None, output['msg']))"
p464
ssg87
S"(self=<gluon.contrib.pg8000.protocol.Connection object>, msg=<gluon.contrib.pg8000.protocol.NoData object>, portal='pg8000_portal_19', old_reader=<gluon.contrib.pg8000.protocol.MessageReader object>, copy_stream=None)"
p465
sg89
S'_bind_nodata'
p466
sa(dp467
g66
S'/home/leo/Dropbox/web2py/gluon/contrib/pg8000/protocol.py'
p468
sg68
(dp469
S'exc'
p470
S"ProgrammingError('ERROR', '42P01', 'no existe la relaci\\xc3\\xb3n \\xc2\\xabauth_user\\xc2\\xbb')"
p471
ssg74
I916
sg75
(dp472
I911
S'                    retval = handler(msg, *args, **kwargs)'
p473
sI912
S'                    if retval:'
p474
sI913
S'                        # The handler returned a true value, meaning that the'
p475
sI914
S'                        # message loop should be aborted.'
p476
sI915
S'                        if exc != None:'
p477
sI916
S'                            raise exc'
p478
sI917
S'                        return retval'
p479
sI918
S'                    elif hasattr(self, "_retval"):'
p480
sI919
S'                        # The handler told us to return -- used for non-true'
p481
sI920
S'                        # return values'
p482
ssg87
S'(self=<gluon.contrib.pg8000.protocol.MessageReader object>)'
p483
sg89
g448
sasS'pyver'
p484
S'Python 2.7.5+: /usr/bin/python (prefix: /usr)'
p485
sS'session'
p486
g61
(S's\xbd\x01\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_orderby</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_query</td><td style="vertical-align:top;">:</td><td><div>db.auth_group.id&gt;0</div></td></tr></table></div>'
tRp487
sS'etype'
p488
S"<class 'gluon.contrib.pg8000.errors.ProgrammingError'>"
p489
sS'date'
p490
S'Tue Jan 21 12:20:17 2014'
p491
sS'response'
p492
g61
(S's\x05\x17\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f9b38223dc0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_seacat_ingresos</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a2589693-9f4a-40df-9f14-2fe733002bfd<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/index/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_seacat_ingresos</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/sessions/127.0.0.1-a2589693-9f4a-40df-9f14-2fe733002bfd&#x27;, mode &#x27;rb+&#x27; at 0x7f9b2028e030&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/sessions/127.0.0.1-a2589693-9f4a-40df-9f14-2fe733002bfd</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>a559c487d5b4edd6c051c1bf75a794fb</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a2589693-9f4a-40df-9f14-2fe733002bfd</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_seacat_ingresos</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>SEACAT_ingresos</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/index.html</div></td></tr></table></div>'
tRp493
sS'locals'
p494
(dp495
S'exc'
p496
S"ProgrammingError('ERROR', '42P01', 'no existe la relaci\\xc3\\xb3n \\xc2\\xabauth_user\\xc2\\xbb')"
p497
sS'msg_class'
p498
S"<class 'gluon.contrib.pg8000.protocol.ReadyForQuery'>"
p499
sS'self'
p500
S'<gluon.contrib.pg8000.protocol.MessageReader object>'
p501
sg46
S'()'
p502
sS'handler'
p503
S'<function <lambda>>'
p504
sS'kwargs'
p505
g21
sS'msg'
p506
S'<ReadyForQuery Idle in Failed Transaction>'
p507
sS'msg_handled'
p508
g100
sS'retval'
p509
S'1'
sssS'traceback'
p510
S'Traceback (most recent call last):\n  File "/home/leo/Dropbox/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/home/leo/Dropbox/web2py/applications/SEACAT_ingresos/models/db.py", line 73, in <module>\n    auth.define_tables(username=False, signature=True, migrate=True)\n  File "/home/leo/Dropbox/web2py/gluon/tools.py", line 1737, in define_tables\n    format=\'%(first_name)s %(last_name)s (%(id)s)\'))\n  File "/home/leo/Dropbox/web2py/gluon/dal.py", line 8139, in define_table\n    table = self.lazy_define_table(tablename,*fields,**args)\n  File "/home/leo/Dropbox/web2py/gluon/dal.py", line 8176, in lazy_define_table\n    polymodel=polymodel)\n  File "/home/leo/Dropbox/web2py/gluon/dal.py", line 1086, in create_table\n    fake_migrate=fake_migrate\n  File "/home/leo/Dropbox/web2py/gluon/dal.py", line 1194, in migrate_table\n    self.execute(sub_query)\n  File "/home/leo/Dropbox/web2py/gluon/dal.py", line 1916, in execute\n    return self.log_execute(*a, **b)\n  File "/home/leo/Dropbox/web2py/gluon/dal.py", line 1910, in log_execute\n    ret = self.cursor.execute(command, *a[1:], **b)\n  File "/home/leo/Dropbox/web2py/gluon/contrib/pg8000/dbapi.py", line 246, in _fn\n    return fn(self, *args, **kwargs)\n  File "/home/leo/Dropbox/web2py/gluon/contrib/pg8000/dbapi.py", line 317, in execute\n    self._execute(operation, args)\n  File "/home/leo/Dropbox/web2py/gluon/contrib/pg8000/dbapi.py", line 322, in _execute\n    self.cursor.execute(new_query, *new_args)\n  File "/home/leo/Dropbox/web2py/gluon/contrib/pg8000/interface.py", line 399, in execute\n    self._stmt.execute(*args, **kwargs)\n  File "/home/leo/Dropbox/web2py/gluon/contrib/pg8000/interface.py", line 169, in execute\n    self._row_desc, cmd = self.c.bind(self._portal_name, self._statement_name, args, self._parse_row_desc, kwargs.get("stream"))\n  File "/home/leo/Dropbox/web2py/gluon/contrib/pg8000/protocol.py", line 943, in _fn\n    return fn(self, *args, **kwargs)\n  File "/home/leo/Dropbox/web2py/gluon/contrib/pg8000/protocol.py", line 1142, in bind\n    return reader.handle_messages()\n  File "/home/leo/Dropbox/web2py/gluon/contrib/pg8000/protocol.py", line 911, in handle_messages\n    retval = handler(msg, *args, **kwargs)\n  File "/home/leo/Dropbox/web2py/gluon/contrib/pg8000/protocol.py", line 1181, in _bind_nodata\n    reader.handle_messages()\n  File "/home/leo/Dropbox/web2py/gluon/contrib/pg8000/protocol.py", line 916, in handle_messages\n    raise exc\nProgrammingError: (\'ERROR\', \'42P01\', \'no existe la relaci\\xc3\\xb3n \\xc2\\xabauth_user\\xc2\\xbb\')\n'
p511
s.